---

- name: Collect Cisco IOS, NXOS and Arista EOS Facts and Push to Netbox
  hosts: all
  gather_facts: false
  vars:
    ansible_command_timeout: 300
    ssh_type: paramiko
  tasks:
    - include_vars: main.yml

######################
# COLLECT FROM NODES #
######################

    - name: IOS gatthering facts
      block:
      - name: IOS facts
        #connection: local
        cisco.ios.ios_facts:
          gather_subset:
            - hardware
          gather_network_resources:
            - "interfaces"
            - "l2_interfaces"
            - "l3_interfaces"
            - "acl_interfaces"
            - "static_routes" 
            - "acls" 
            - "vlans"
        register: _ios_facts
        #become: true
      - name: Debug IOS facts
        debug:
          var: _ios_facts
      - name: Set IOS facts
        set_fact:
          _facts: "{{ _ios_facts }}"
      when: ansible_network_os == 'ios'

    - name: NXOS gatthering facts
      block:
      - name: NXOS facts
        #connection: local
        cisco.nxos.nxos_facts:
          gather_subset:
            - hardware
          gather_network_resources:
            - "interfaces"
            - "l2_interfaces"
            - "l3_interfaces"
            - "acl_interfaces"
            - "static_routes" 
            - "acls" 
        register: _nxos_facts
        #become: true
      - name: Debug NXOS facts
        debug:
          var: _nxos_facts
      - name: Set NXOS facts
        set_fact:
          _facts: "{{ _nxos_facts }}"
      when: ansible_network_os == 'nxos'

    - name: EOS gatthering facts
      block:
      - name: EOS facts
        #connection: local
        arista.eos.eos_facts:
          gather_subset: all
          #gather_network_resources: all
        register: _eos_facts
        #become: true
      - name: Debug EOS facts
        debug:
          var: _eos_facts
      - name: Set EOS facts
        set_fact:
          _facts: "{{ _eos_facts }}"
      when: ansible_network_os == 'eos'


##################
# PUSH TO NETBOX #
##################

    - name: Push site data to Netbox
      netbox.netbox.netbox_site:
        netbox_url: "{{ net_netbox_url }}"
        netbox_token: "{{ net_netbox_token }}"
        validate_certs: no
        data: 
          name: "{{ site }}"
          slug: "{{ site }}"
          description: "Site located in {{ site }}"
          status: Active
        state: present
      delegate_to: localhost
      throttle: 1

    - name: Push device type data to Netbox
      netbox.netbox.netbox_device_type:
        netbox_url: "{{ net_netbox_url }}"
        netbox_token: "{{ net_netbox_token }}"
        validate_certs: no
        data: 
          model: "{{ _facts.ansible_facts.ansible_net_system | default('unknown') }}"
          manufacturer: "{% if ansible_network_os == 'eos' %}arista{% else %}cisco{% endif %}"
          slug: "{{ _facts.ansible_facts.ansible_net_system | default('unknown') }}"
        state: present
      throttle: 1

    - name: Push devices data to Netbox
      netbox.netbox.netbox_device:
        netbox_url: "{{ net_netbox_url }}"
        netbox_token: "{{ net_netbox_token }}"
        validate_certs: no
        data: 
          name: "{{ inventory_hostname }}"
          site: "{{ site }}"
          serial: "{{ _facts.ansible_facts.ansible_net_serialnum | default(omit) }}"
          device_type: "{{ _facts.ansible_facts.ansible_net_system | default('unknown') }}"
          device_role: "router"
          local_context_data: "{{ _facts.ansible_facts.ansible_network_resources }}"
          comments: "Added by AAP"
        state: present
      throttle: 1

    - name: Push interfaces data to Netbox
      netbox.netbox.netbox_device_interface:
        netbox_url: "{{ net_netbox_url }}"
        netbox_token: "{{ net_netbox_token }}"
        validate_certs: no
        data: 
          device: "{{ inventory_hostname }}"
          name: "{{ item.name }}"
          type: "Virtual"
          description: "{{ item.name }} description"
        state: present
      loop: "{{ _facts.ansible_facts.ansible_network_resources.interfaces }}"
      when: _facts.ansible_facts.ansible_network_resources.interfaces is defined
      throttle: 1

    - name: Push IPv4 addresses data to Netbox
      netbox.netbox.netbox_ip_address:
        netbox_url: "{{ net_netbox_url }}"
        netbox_token: "{{ net_netbox_token }}"
        validate_certs: no
        data: 
          assigned_object:
            device: "{{ inventory_hostname }}"
            name: "{{ item.name }}"
          family: 4
          address: "{{ item.ipv4[0].address }}"
          description: "{{ item.ipv4[0].address }} description"
        state: present
      loop: "{{ _facts.ansible_facts.ansible_network_resources.l3_interfaces }}"
      when: _facts.ansible_facts.ansible_network_resources.l3_interfaces is defined and item.ipv4 is defined and item.ipv4[0].address != ""
      throttle: 1

    - name: Push VLANs data to Netbox
      netbox.netbox.netbox_vlan:
        netbox_url: "{{ net_netbox_url }}"
        netbox_token: "{{ net_netbox_token }}"
        validate_certs: no
        data: 
          site: "{{ site }}"
          name: "{{ item.name }}"
          vid: "{{ item.vlan_id }}"
        state: present
      loop: "{{ _facts.ansible_facts.ansible_network_resources.vlans }}"
      when: _facts.ansible_facts.ansible_network_resources.vlans is defined and item is defined
      throttle: 1
